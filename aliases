alias reload='source ~/.aliases'
alias lock='i3lock -i ~/.lockscreen.png -t -b -c 000000'
alias aliases='vim ~/.aliases && reload'

# ssh aliases
alias lnxsrv='ssh baumgart@lnxsrv.seas.ucla.edu'
alias jbaumy='mosh james@jbaumy.com'
alias rig5='mosh james@96.251.7.41'
alias rig5local='mosh 192.168.1.100'
alias sshl='ssh jebaum@linux.ucla.edu'
alias 144='ssh cs144@192.168.56.10'
alias 118='ssh cs118@192.168.57.10'

# folder aliases
alias lab1='cd ~/Dropbox/Documents/UCLA/Y2Q3/cs111/labs/1'
alias ucla='cd ~/Dropbox/Documents/UCLA'
alias y1q1='cd ~/Dropbox/Documents/UCLA/Y1Q1'
alias y1q2='cd ~/Dropbox/Documents/UCLA/Y1Q2'
alias y1q3='cd ~/Dropbox/Documents/UCLA/Y1Q3'
alias y2q1='cd ~/Dropbox/Documents/UCLA/Y2Q1'
alias y2q2='cd ~/Dropbox/Documents/UCLA/Y2Q2'
alias y2q3='cd ~/Dropbox/Documents/UCLA/Y2Q3'
alias y3q1='cd ~/Dropbox/Documents/UCLA/Y3Q1'
alias euler='cd ~/Dropbox/Documents/Misc/euler;ls'

# command aliases
alias db='sudo sysctl -p && dropbox start'
alias fontlist='fc-list -f "%{family} : %{file}\n" :spacing=100 | sort'
alias gist='gist -c -p'
alias grep='grep --color=auto'
alias mpc='mpc -h 192.168.1.100'
alias myip='curl icanhazip.com'
alias open='xdg-open'
alias 'ps?'='ps ax | grep '
alias termcolors='~/dotfiles/scripts/color/colortest.pl -w -r'
alias top='htop'
alias tree='tree -C'
alias vim='vim -p'
alias x='exit'
alias xev="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
alias ytdlmp3='youtube-dl --audio-quality 0 --audio-format mp3 -x'
alias ytdl='youtube-dl'
alias yt='youtube-viewer'
alias rcd='cd `xclip -o`'
alias sokoban='clisp -i a-star.lsp -i hw3.lsp'
alias tags='./.git/hooks/ctags >/dev/null'
alias sedtree="find . -type d |sed 's:[^-][^/]*/:--:g; s:^-: |:'"
alias network='lsof -P -i -n'
alias livestreamer='livestreamer -p mpv'
alias vi='vim'
alias v='vim'

fkill() { ps -ef | sed 1d | fzf | awk '{print $2}' | xargs kill -${1:-9} }
fh() { eval $(history | fzf +s | sed 's/\s*[0-9]*\s*//') }

function findbugs(){
  if [[ $# == 0 ]]; then
    echo "Please supply a .class file as an argument"
  else
  java -jar /opt/findbugs/lib/findbugs.jar $1
  fi
}

function up() {
  LIMIT=$1
  P=$PWD
  for ((i=1; i <= LIMIT; i++))
  do
    P=$P/..
  done
  cd $P
  export MPWD=$P
}

function to() {
  if [[ $# -le 1 ]]; then
    echo "Please supply the destination, and some files or directories to copy"
  elif [[ "$1" == "server" || "$1" == "jbaumy" ]]; then
    shift
    scp -r $@ james@jbaumy.com:/home/james
  elif [[ "$1" == "desktop" ]]; then
    shift
    scp -r $@ james@96.251.7.41:/home/james
  elif [[ "$1" == "desktopl" || "$1" == "desktoplocal" ]]; then
    shift
    scp -r $@ james@192.168.1.100:/home/james
  fi
}

function cptlnxsrv() { # copy to linux server
    # 3 parameters: local location to copy from (relative to current directory) | optional folder to create for dump | flags to add (no dash)
    # if copying one file and not folder, will be renamed to second parameter
  if [ "$1" = "-h" -o "$1" = "-help" -o "$1" = "--help" ]; then
    echo -e "${white}takes 3 parameters:\\n\\tlocal file or directory to copy (relative to current)\\n\\toptional folder under ~/files/ to create for dump\\n\\tflags to add beyond -r (no dash)${NC}"
  else
    echo -e "${white}Running: scp -r$3 $1 /u/ee/ugrad/baumgart/files/$2${NC}"
    scp -r$3 "./$1" baumgart@lnxsrv.seas.ucla.edu:"/u/ee/ugrad/baumgart/files/$2"
  fi
}

function cpflnxsrv() { # copy from linux server using "files" as base directory
    # 2 parameters: location under files to copy | flags (no dash)
    # passing no parameters will download everything under "files" and create a "files" directory
    # passing "*" or "." downloads only the contents of files without creating a "files" directory
  if [ "$1" = "-h" -o "$1" = "-help" -o "$1" = "--help" ]; then
    echo -e "${white}takes 2 parameters:\\n\\tlocation under ~/files/ to copy\\n\\tflags to add beyond -r (no dash)\\n\\tpassing no parameters downloads everything in ~/files/ to SLS\\n\\tpassing * or . downloads contents of ~/files/, not parent folder${NC}"
  else
    echo -e "${white}Running: scp -r$2 /u/ee/ugrad/baumgart/files/$1 Downloads/Seasnet Linux Server${NC}"
    scp -r$2 baumgart@lnxsrv.seas.ucla.edu:"/u/ee/ugrad/baumgart/files/$1" /cygdrive/d/Downloads/Seasnet\ Linux\ Server
  fi
}

function lslnxsrv() {
    # 2 parameters: directory to list relative to "files" | flags (no dash)
    # passing no parameters will list the contents of "files", passing ".." will list root
  if [ "$1" = "-h" -o "$1" = "-help" -o "$1" = "--help" ]; then
    echo -e "${white}takes 2 parameters:\\n\\tdirectory to list relative to ~/files/\\n\\tflags to add beyond -F (no dash)${NC}"
  else
    echo -e "${white}Listing contents of: /u/ee/ugrad/baumgart/files/$1${NC}"
    ssh baumgart@lnxsrv.seas.ucla.edu ls -F$2 "files/$1"
  fi
}

function rmlnxsrv() { # removes files from lnxsrv relative to "files" directory
    # 2 parameters: files/directory to delete | flags to add (with a dash)
  if [ "$1" = "-h" -o "$1" = "-help" -o "$1" = "--help" ]; then
    echo -e "${white}takes 2 parameters:\\n\\tfiles to delete relative to ~/files/\\n\\tflags to add (with dash)${NC}"
  else
    echo -e "${white}Removing file: /u/ee/ugrad/baumgart/files/$1${NC}"
    ssh baumgart@lnxsrv.seas.ucla.edu rm $2 "/u/ee/ugrad/baumgart/files/$1"
  fi
}

white='\e[1;37m'
blue='\e[1;34m'
green='\e[1;32m'
red='\e[1;31m'
purple='\e[0;35m'
yellow='\e[1;33m'
NC='\e[0m' # No Color

# MORE COLOR CODES FOR ALIASING
#Black       0;30     Dark Gray     1;30
#Blue        0;34     Light Blue    1;34
#Green       0;32     Light Green   1;32
#Cyan        0;36     Light Cyan    1;36
#Red         0;31     Light Red     1;31
#Purple      0;35     Light Purple  1;35
#Brown       0;33     Yellow        1;33
#Light Gray  0;37     White         1;37

# vim:filetype=sh
