# Path to your oh-my-zsh configuration.
ZSH=$HOME/dotfiles/zsh
DISABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"

plugins=(git archlinux colored-man extract web-search sudo) # zsh-syntax-highlighting)

# add a function path
fpath=($ZSH/functions $ZSH/completions $fpath)

for config_file ($ZSH/lib/*.zsh); do
  source $config_file
done


is_plugin() {
  local base_dir=$1
  local name=$2
  test -f $base_dir/plugins/$name/$name.plugin.zsh \
    || test -f $base_dir/plugins/$name/_$name
}
# Add all defined plugins to fpath. This must be done before running compinit.
for plugin ($plugins); do
  if is_plugin $ZSH_CUSTOM $plugin; then
    fpath=($ZSH_CUSTOM/plugins/$plugin $fpath)
  elif is_plugin $ZSH $plugin; then
    fpath=($ZSH/plugins/$plugin $fpath)
  fi
done

# Save the location of the current completion dump file.
if [ -z "$ZSH_COMPDUMP" ]; then
  ZSH_COMPDUMP="${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"
fi

# Load and run compinit
autoload -U compinit
compinit -i -d "${ZSH_COMPDUMP}"

# Load all of the plugins that were defined in ~/.zshrc
for plugin ($plugins); do
  if [ -f $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh ]; then
    source $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh
  elif [ -f $ZSH/plugins/$plugin/$plugin.plugin.zsh ]; then
    source $ZSH/plugins/$plugin/$plugin.plugin.zsh
  fi
done




export PATH=$HOME/.cabal/bin:$PATH
source ~/.aliases
source ~/dotfiles/scripts/bd.zsh
source ~/dotfiles/scripts/zbell.zsh
source ~/dotfiles/scripts/opp.zsh/opp.zsh
source ~/dotfiles/scripts/opp.zsh/opp/surround.zsh
source ~/dotfiles/scripts/opp.zsh/opp/textobj-between.zsh
source ~/dotfiles/prompt.zsh
source ~/dotfiles/scripts/fzf.sh

setopt BRACE_CCL
setopt NO_CASE_GLOB
setopt NUMERIC_GLOB_SORT
export EDITOR=vim
export PAGER="less"
export LESS="-R"
export VIM=/usr/share/vim
if [ -f "/usr/bin/src-hilite-lesspipe.sh" ]; then
  export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
fi

stty -ixon  # stop C-s from activating scroll lock
ulimit -c unlimited

GPG_TTY=$(tty)
export GPG_TTY

# list of actions here http://www.cs.elte.hu/zsh-manual/zsh_14.html
bindkey -v
bindkey "^[[7~" beginning-of-line   # make home key work
bindkey "^[[8~" end-of-line         # make end key work
bindkey "^A"    beginning-of-line
bindkey "^B"    undo                # C-b undoes last text modification (think 'back')
bindkey "^D"    vi-find-prev-char   # C-d takes one character input, moves to prev instance
bindkey "^E"    end-of-line
bindkey "^F"    vi-find-next-char   # C-f takes one character input, moves to next instance
bindkey "^G"    delete-char         # C-g deletes character in front of cursor, opposite C-h
bindkey "^L"    clear-screen
bindkey "^N"    down-history
bindkey "^P"    up-history
bindkey "^Q"    delete-word         # C-q deletes word in front of cursor, opposite C-w
bindkey "^S"    sudo-command-line   # C-s inserts 'sudo' at beginning of line. oh-my-zsh plugin
bindkey "^T"    vi-repeat-find      # C-t repeats last find
bindkey "^V"    send-break          # C-v aborts current command
bindkey "^[[3~" delete-char
# bindkey "^R"    history-incremental-search-backward


KEYTIMEOUT=1
function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/--NORMAL--}/(main|viins)/--INSERT--}"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select
RPROMPT="" # needed for some reason to initalize the vi mode prompt

# generated by fzf install script
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
