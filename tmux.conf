# status bar {{{
set-option -g status-utf8 on

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green,nobright][#[fg=red]G #[fg=green]#H:#S-#P #[fg=black]#[fg=green,nobright]] ['
set -g status-right '#[fg=green,nobright]] #[fg=blue,nobright]#(cut -f 1-3 -d " " /proc/loadavg) #[fg=white]%k:%M:%S#[default]'

# colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# number from 1, not 0
set -g base-index 1
set -g pane-base-index 1

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg "#224488"
set-window-option -g window-status-current-attr bright
# set-window-option -g window-status-current-format "(#I #W)"

# bell window title colors
set-window-option -g window-status-bell-fg white
set-window-option -g window-status-bell-bg red
set-window-option -g window-status-bell-attr dim

# activity window title colors (caused by joins and sends)
set-window-option -g window-status-activity-fg "#BBBBBB"
set-window-option -g window-status-activity-bg "#114411"
set-window-option -g window-status-activity-attr dim

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange
# }}}
# general settings {{{
set-option -g default-shell /bin/zsh

set-option -g prefix C-g # C-g modifier instead of default C-b
bind C-g last-window     # C-g C-g to go to last active window

set -s escape-time 1     # Allows for faster key repetition

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on  # color statusbar
# set -g visual-activity on  # show 'Activity in window...' message

set-option -g allow-rename off # don't auto rename windows
set -g mode-mouse off          # rm mouse mode fail
set -g default-terminal "screen-256color"
# }}}
# ijkl {{{
# `C-g q` numbers all panes briefly
# `C-g o` rotates between panes, { and } move them within window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
# }}}
# keymaps {{{
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind A command-prompt "rename-window %%"

bind v split-window -h   # vim style vertical split
bind s split-window -v   # vim style horizontal split
bind a swap-window -t 0  # move window to index 0

# pane borders
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01

# Vi copypaste mode
set-window-option -g mode-keys vi
bind -t vi-copy 'k' cursor-up
bind -t vi-copy 'h' cursor-left
bind -t vi-copy 'j' cursor-down
bind -t vi-copy 'l' cursor-right
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# pane/window management. { and } move
bind Space command-prompt -p "join pane from:"  "join-pane -s ':%%'"
bind S     command-prompt -p "send pane to:"    "join-pane -t ':%%'"
bind < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
bind > break-pane -d     # break pane out into its own window, don't focus
bind Enter break-pane    # break pane out into its own window
# }}}
# vim: foldmethod=marker foldlevel=0 textwidth=0
