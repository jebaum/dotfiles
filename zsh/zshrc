ZSH=$HOME/dotfiles/zsh
COMPLETION_WAITING_DOTS="true"
# opp.zsh is a big bottleneck in the shell starting, and loading them any other way didn't work
alias oppzsh=". $ZSH/opp.zsh/opp.zsh; . $ZSH/opp.zsh/opp/surround.zsh; . $ZSH/opp.zsh/opp/textobj-between.zsh"

# need `pkgfile' installed + must run `sudo pgkfile --update` to get list of commands
[[ -e /usr/share/doc/pkgfile/command-not-found.zsh ]] && source /usr/share/doc/pkgfile/command-not-found.zsh

fpath=($ZSH/functions $ZSH/completions/src $fpath)

for config_file ($ZSH/lib/*.zsh); do
  source $config_file
done

if [ -z "$ZSH_COMPDUMP" ]; then
  ZSH_COMPDUMP="${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"
fi

autoload -U compinit
compinit -i -d "${ZSH_COMPDUMP}" # compdefs must come after compinit
compdef mosh=ssh
compdef g=git

export PATH=$HOME/.cabal/bin:$PATH
source ~/dotfiles/scripts/fzf_utilities.sh

source $ZSH/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh # load syntax highlighting before history search
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

for config_file ($ZSH/plugins/*.zsh); do
  source $config_file
done

setopt BRACE_CCL
setopt NO_CASE_GLOB
setopt NUMERIC_GLOB_SORT
export EDITOR=vim
if [ -f "/usr/bin/src-hilite-lesspipe.sh" ]; then
  export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
fi

stty -ixon  # stop C-s from activating scroll lock
ulimit -c unlimited

GPG_TTY=$(tty)
export GPG_TTY

# list of actions here http://www.cs.elte.hu/zsh-manual/zsh_14.html
bindkey -v
bindkey "^[[3~" delete-char         # make delete key work
bindkey "^[[7~" beginning-of-line   # make home key work
bindkey "^[[8~" end-of-line         # make end key work
bindkey "^[f"   forward-word
bindkey "^[b"   backward-word
bindkey "^A"    beginning-of-line
bindkey "^B"    backward-char
bindkey "^E"    end-of-line
bindkey "^F"    forward-char
bindkey "^G"    delete-char         # C-g deletes character in front of cursor, opposite C-h
bindkey "^H"    backward-delete-char
bindkey "^K"    kill-line
bindkey "^L"    clear-screen
bindkey "^Q"    delete-word         # C-q deletes word in front of cursor, opposite C-w
bindkey "^[r"   history-incremental-search-backward
bindkey "^S"    sudo-command-line   # C-s inserts 'sudo' at beginning of line
bindkey "^U"    kill-whole-line
bindkey "^V"    vi-find-prev-char
bindkey "^W"    backward-delete-word
bindkey "^Y"    undo
bindkey "^_"    vi-find-next-char
bindkey "^@"    vi-repeat-find
bindkey "^?"    backward-delete-char
bindkey '^P' history-substring-search-up           # bind P and N for EMACS mode history-substring-search
bindkey '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up   # bind k and j for VI mode history-substring-search
bindkey -M vicmd 'j' history-substring-search-down

function _edit-widget() {
  IFS=$'\n'
  # TODO potentially use locate here too? `locate --wholename "$PWD" | fzf` ?
  filelist=( $(ag -g '.' 2>/dev/null | fzf -m) )
  if [ -z "$filelist" ]; then
    zle redisplay
  else
    opencmd="vim -p "
    opencmd+=$(for item in $filelist; do
      echo -n \"$item\"
      echo -n " "
    done)
    zle kill-whole-line
    zle redisplay
    BUFFER=$opencmd
    zle accept-line
  fi
}

zle -N _edit-widget
bindkey '^O'  _edit-widget

KEYTIMEOUT=1

source $ZSH/fzf.zsh # .fzf.zsh is generated by fzf install script and placed in ~ by default, but I tweak it
