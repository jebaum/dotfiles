# Source zim
export ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
[[ -s ${ZIM_HOME}/init.zsh ]] && source ${ZIM_HOME}/init.zsh

setopt CLOBBER
export EDITOR=nvim
export VISUAL=nvim
export LESS='-g -i -M -R -S -w -z-4'
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export REPORTTIME=30
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git/*"'

stty -ixon  # stop C-s from activating scroll lock
ulimit -c unlimited

GPG_TTY=$(tty)
export GPG_TTY

bindkey -v
for config_file ($HOME/dotfiles/zsh/{*.zsh,plugins/*.zsh}); do
    source $config_file
done

sudo-command-line() {
  [[ -z $BUFFER ]] && zle up-history
  [[ $BUFFER != sudo\ * ]] && BUFFER="sudo $BUFFER"
  zle end-of-line
}
zle -N sudo-command-line

source $HOME/dotfiles/scripts/git/git-extras/etc/git-extras-completion.zsh
source $HOME/dotfiles/scripts/fzf_utilities.sh

# list of actions here http://www.cs.elte.hu/zsh-manual/zsh_14.html
bindkey "^[[3~" delete-char         # make delete key work
bindkey "^[[7~" beginning-of-line   # make home key work
bindkey "^[[8~" end-of-line         # make end key work
bindkey "^[f"   forward-word
bindkey "^[b"   backward-word
bindkey "^[m"   copy-prev-shell-word
bindkey "^A"    beginning-of-line
bindkey "^B"    backward-char
bindkey "^E"    end-of-line
bindkey "^F"    forward-char
bindkey "^G"    delete-char         # C-g deletes character in front of cursor, opposite C-h
bindkey "^H"    backward-delete-char
bindkey '^I'    expand-or-complete  # expand-or-complete-with-dots by default, but fzf-completion takes it
bindkey "^K"    kill-line
bindkey "^L"    clear-screen
bindkey "^Q"    delete-word         # C-q deletes word in front of cursor, opposite C-w
bindkey "^[r"   history-incremental-search-backward
bindkey "^S"    sudo-command-line   # C-s inserts 'sudo' at beginning of line
bindkey "^U"    kill-whole-line
bindkey "^V"    vi-find-prev-char
bindkey "^W"    backward-delete-word
bindkey "^Y"    undo
bindkey "^_"    vi-find-next-char
bindkey "^@"    vi-repeat-find
bindkey "^?"    backward-delete-char
bindkey '^P'    history-substring-search-up           # bind P and N for EMACS mode history-substring-search
bindkey '^N'    history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up      # bind k and j for VI mode history-substring-search
bindkey -M vicmd 'j' history-substring-search-down
bindkey -M vicmd 'V' visual-mode                      # prezto binds 'v' to open $VISUAL
KEYTIMEOUT=1

my-backward-delete-word() {
    local WORDCHARS=${WORDCHARS/\//} # delete back to '/' character
    zle backward-delete-word
}
zle -N my-backward-delete-word
bindkey '^W' my-backward-delete-word

# http://sgeb.io/articles/zsh-zle-closer-look-custom-widgets/
# zle -N <widget name> <function name>
lskeyimpl() {
    if   [ "$WIDGET" = "lskey" ];  then BUFFER="ls"
    elif [ "$WIDGET" = "lslkey" ]; then BUFFER="ls -lh"
    fi
    zle accept-line
}
zle -N lskey lskeyimpl
zle -N lslkey lskeyimpl
bindkey '\el' lskey
bindkey '\eL' lslkey

gitstatuskeyimpl() {
    if git rev-parse --git-dir > /dev/null 2>&1; then
        if [ "$WIDGET" = "gitstatuskey" ]; then
            BUFFER="git status --column"
        elif [ "$WIDGET" = "gitstatusshortkey" ]; then
            BUFFER="git status --short"
        fi
        zle accept-line
    fi
}
zle -N gitstatuskey gitstatuskeyimpl
zle -N gitstatusshortkey gitstatuskeyimpl
bindkey '\eg' gitstatuskey
bindkey '\eG' gitstatusshortkey

killkeyimpl() {
    BUFFER="~/dotfiles/scripts/fkill.sh -9 all"
    zle accept-line
}
zle -N killkey killkeyimpl
bindkey '\ek' killkey

updirkey() {
    cd .. && zle reset-prompt
}
zle -N updirkey updirkey
bindkey "" updirkey # Ctrl + /

popdkey() {
    if [ "$#dirstack" != "0" ]; then popd && zle reset-prompt; fi
}
zle -N popdkey popdkey
bindkey "" popdkey # Alt + Ctrl + /

if [ -n "$STARTUPDIR" ] && [ -d "$STARTUPDIR" ]; then
    cd $STARTUPDIR
    unset STARTUPDIR
fi

function chpwd() {
  print -Pn "\e]0;st: ${PWD/#${HOME}/~}\a"
  pwd > /tmp/whereami
}
chpwd # chpwd doesn't run on startup, so explicitly call it to set title when first opening shell

if [[ -e ~/dotfiles/zsh/zshrc.local ]]; then
    source ~/dotfiles/zsh/zshrc.local
fi
